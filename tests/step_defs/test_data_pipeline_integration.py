from pytest_bdd import scenario, scenarios, given, when, then
from sklearn import datasets
from functools import partial
import pandas as pd
import os

from wine_data_pipeline import data_extraction, data_analysis, feature_engineering, dataset_development

# Setup test for validating the number of rows and columns in the dataset
@scenario("..\\features\\data_pipeline_feature_file.feature", "Validate final dataset shape")
def test_database():
    pass

# Run existing data pipeline to create final dataset
@given('I have extracted, cleaned, engineered, and saved a dataset')
def execute_data_pipeline():
    # Execute the data pipeline using the python interpreter
    os.system("python wine_data_pipeline.py")

# Load the final dataset generated by the wine data pipeline
@when('I load the dataset')
def load_final_dataset():
    global wine
    try:
        wine = pd.read_csv('wine_dataset.csv')
    except:
        raise Exception("Could not load wine dataset")

# Check that the final dataset has the correct number of rows and columns
@then('The number of rows in the dataset is 178 and the number of columns is 14')
def check_dataset_size():
    # there should be 178 rows, 13 input attributes, and 1 output label in the final dataset produced
    assert wine.shape == (178, 14)